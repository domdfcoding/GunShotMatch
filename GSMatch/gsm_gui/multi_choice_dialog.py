# -*- coding: UTF-8 -*-
#
#  Copyright (c) 2017-2019 Dominic Davis-Foster <dominic@davis-foster.co.uk>
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
# generated by wxGlade 0.9.3 on Tue Apr  9 13:47:34 2019
#

import wx
import wx.html2
import wx.richtext

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class multi_choice_dialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		choices.sort()
		self.choices = choices
		self.message = message
		self.caption = caption
		wx.Dialog.__init__(self, parent, -1, style=wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER)
		self.SetMinSize((358, 460))
		self.multi_choice_panel_1 = wx.Panel(self, wx.ID_ANY)
		self.multi_choice_panel_2 = wx.Panel(self.multi_choice_panel_1, wx.ID_ANY)
		self.check_list_box_1 = wx.CheckListBox(self.multi_choice_panel_2, wx.ID_ANY, choices=[],
												style=wx.LB_HSCROLL | wx.LB_MULTIPLE | wx.LB_SORT)
		
		self.btns = self.CreateSeparatedButtonSizer(wx.OK | wx.CANCEL)
		
		self.__set_properties()
		self.__do_layout()
		self.check_list_box_1.Clear()
		for item in choices:
			self.check_list_box_1.Append(item)
		
		return  # ignore the wxglade code below
		
		# begin wxGlade: multi_choice_dialog.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
		wx.Dialog.__init__(self, *args, **kwds)
		self.SetMinSize((358,410))
		self.multi_choice_panel_1 = wx.Panel(self, wx.ID_ANY)
		self.multi_choice_panel_2 = wx.Panel(self.multi_choice_panel_1, wx.ID_ANY)
		self.check_list_box_1 = wx.CheckListBox(self.multi_choice_panel_2, wx.ID_ANY, choices=[], style=wx.LB_HSCROLL | wx.LB_MULTIPLE | wx.LB_SORT)

		self.__set_properties()
		self.__do_layout()
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: multi_choice_dialog.__set_properties
		self.SetTitle("multi_choice_dialog")
		_icon = wx.NullIcon
		_icon.CopyFromBitmap(wx.Bitmap("./lib/icons/GunShotMatch logo256.png", wx.BITMAP_TYPE_ANY))
		self.SetIcon(_icon)
		self.check_list_box_1.SetMinSize((256, 128))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: multi_choice_dialog.__do_layout
		multi_choice_sizer_1 = wx.BoxSizer(wx.VERTICAL)
		multi_choice_sizer_2 = wx.BoxSizer(wx.VERTICAL)
		multi_choice_sizer_3 = wx.BoxSizer(wx.VERTICAL)
		multi_choice_label = wx.StaticText(self.multi_choice_panel_2, wx.ID_ANY, "Make a selection")
		multi_choice_sizer_3.Add(multi_choice_label, 0, wx.BOTTOM, 18)
		multi_choice_sizer_3.Add(self.check_list_box_1, 1, wx.BOTTOM | wx.EXPAND, 7)
		self.multi_choice_panel_2.SetSizer(multi_choice_sizer_3)
		multi_choice_sizer_2.Add(self.multi_choice_panel_2, 1, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 18)
		self.multi_choice_panel_1.SetSizer(multi_choice_sizer_2)
		multi_choice_sizer_1.Add(self.multi_choice_panel_1, 1, wx.BOTTOM | wx.EXPAND, 8)
		self.SetSizer(multi_choice_sizer_1)
		multi_choice_sizer_1.Fit(self)
		self.Layout()
		# end wxGlade
		multi_choice_sizer_2.Add(self.btns, 0, wx.ALL | wx.EXPAND,5)
		#multi_choice_sizer_2.Add(10,0,0)
		multi_choice_label.SetLabel(self.message)
		multi_choice_sizer_1.Fit(self)
		self.Layout()

	def GetSelections(self):
		selected = list(set(list(self.check_list_box_1.GetCheckedStrings()) + [self.check_list_box_1.GetString(item) for item in self.check_list_box_1.GetSelections()]))
		selected.sort()
		return selected
	
# end of class multi_choice_dialog

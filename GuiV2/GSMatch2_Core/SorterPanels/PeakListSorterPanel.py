#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  PeakListSorterPanel.py
"""
wx.Panel for the experiment peak list containing a wx.ListCtrl
	that can be sorted by clicking the column headers
"""
#
#  This file is part of GunShotMatch
#
#  Copyright (c) 2019  Dominic Davis-Foster <dominic@davis-foster.co.uk>
#
#  GunShotMatch is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  GunShotMatch is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
# generated by wxGlade 0.9.3 on Tue Dec  3 16:09:23 2019
#

import wx
from mathematical.utils import rounders

from GuiV2.GSMatch2_Core import SorterPanels

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class PeakListSorterPanel(SorterPanels.ExperimentSorterPanel):
	def __init__(self, peak_list, *args, **kwds):
		self.peak_list = peak_list
		# begin wxGlade: PeakListSorterPanel.__init__
		kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
		wx.Panel.__init__(self, *args, **kwds)
		self.expr_list = wx.ListCtrl(self, wx.ID_ANY, style=wx.BORDER_DEFAULT | wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)

		self.__set_properties()
		self.__do_layout()
		# end wxGlade
		self._itemDataMap = {}
		self.default_column_headers = ["UID", "RT", "Area"]
		# TODO: perhaps add more properties
	
		self._populate_ctrl()

	def __set_properties(self):
		# begin wxGlade: PeakListSorterPanel.__set_properties
		self.expr_list.AppendColumn(u"UID", format=wx.LIST_FORMAT_LEFT, width=150)
		self.expr_list.AppendColumn("RT", format=wx.LIST_FORMAT_RIGHT, width=80)
		self.expr_list.AppendColumn("Area", format=wx.LIST_FORMAT_RIGHT, width=130)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: PeakListSorterPanel.__do_layout
		expr_list_sizer = wx.GridSizer(1, 1, 0, 0)
		expr_list_sizer.Add(self.expr_list, 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.LEFT | wx.TOP, 5)
		self.SetSizer(expr_list_sizer)
		expr_list_sizer.Fit(self)
		self.Layout()
		# end wxGlade
	
	def _populate_ctrl(self):
		itemDataMap = {}
		
		for peak_idx, peak in enumerate(self.peak_list):
			
			peak_data = (peak.UID, rounders(peak.rt/60, "0.000"), f'{rounders(peak.area, "0.000"):,}')
			
			self.expr_list.Append(peak_data)
			
			itemDataMap[peak_idx] = peak_data
			self.expr_list.SetItemData(peak_idx, peak_idx)
		
		self.itemDataMap = itemDataMap

# end of class PeakListSorterPanel

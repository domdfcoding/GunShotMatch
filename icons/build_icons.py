#  !/usr/bin/env python
#   -*- coding: utf-8 -*-
#
#  build_icons.py
#
"""
Script to generate png icons in various sizes from SVG artwork
"""
#
#  This file is part of GunShotMatch
#
#  Copyright © 2019 Dominic Davis-Foster <dominic@davis-foster.co.uk>
#
#  GunShotMatch is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  GunShotMatch is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#


# stdlib
import pathlib
import shutil
import sys

# 3rd party
import cairosvg

icons_list = [
		#"add-to-archive",
		"ammo-details",
		"chromatogram",
		"close",
		"configure-markers",
		"configure-borders",
		"configure-colours",
		"document-new",
		"document-open",
		"document-properties",
		"geany-save-all",
		"geany-close-all",
		"mass-spectrum",
		"mass-spectrum-id",
		"mass-spectrum-123",
		"mass-spectrum-rt",
		"gimp-tool-move",
		"comparison-purple",
		"comparison-green",
		"chart-box-whisker",
		"logo-v2",
		"method",
		"method-editor",
		"data-filter",
		"conical-flask",
		"peak",
		"export-pdf",
		"Document-print",
		"Document-print-preview",
		"Conical_flask_red",
		"export_project_report",
		"LibreOffice_Calc",
		"export_images",
		"export_jdx",
		"Merge-arrows-3",
		"rescale_y",
		"rescale_x",
		"show-open-eye",
		"hide-closed-eye",
		]

sizes_list = [16, 22, 24, 32, 48, 64, 110, 128, 192, 256]

print("Generating Icons\n====================")

cwd = pathlib.Path(".").absolute()
output_dir = (cwd.parent / "GuiV2" / "icons").absolute()

if output_dir.exists():
	print("The 'icons' directory already exists!\nDo you want to overwrite it?", end='')
	while True:
		resp = input("   ").lower()
		if resp == "yes":
			shutil.rmtree(output_dir)
			break
		elif resp.startswith("y"):
			print("You must type `YES` to overwrite the existing files.")
		else:
			print("Icon generation cancelled by user.")
			exit()

# Copy fixed-size PNG icons
shutil.copytree(str(cwd/"png"), output_dir)

if not output_dir.exists():
	output_dir.mkdir()

# Create folders
for size in sizes_list:
	size_dir = output_dir / f"_{size}"
	if not size_dir.is_dir():
		size_dir.mkdir()
	(size_dir / "__init__.py").open("w").close()
	
# Generate the icons
for icon in icons_list:
	print(f"Generating {icon}", end='')
	sys.stdout.flush()
	
	icon_scalable = cwd / "scalable" / f"{icon}.svg"
	
	if not icon_scalable.is_file():
		raise FileNotFoundError(f"{icon_scalable} not found")
	
	for size in sizes_list:
		size_dir = output_dir / f"_{size}"
		cairosvg.svg2png(url=str(icon_scalable), write_to=str(size_dir / f"{icon}.png"), output_width=size, output_height=size)
		print(".", end='')
		sys.stdout.flush()
		
	print("Done")
# Add __init__.py to icons directory for importlib_resources
with (output_dir / "__init__.py").open("w") as init_file:
	init_file.write(f"""
#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  __init__.py
#
#  DO NOT EDIT THIS FILE
#  This file is automatically generated by /icons/build_icons.py
#  Any changes will be overwritten
#
#  This file is part of GunShotMatch
#
#  Copyright © 2019-2020 Dominic Davis-Foster <dominic@davis-foster.co.uk>
#
#  GunShotMatch is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  GunShotMatch is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#

# stdlib
import pathlib

# third party
import wx
from importlib_resources import path

# this package
import GuiV2.icons
from GuiV2.icons import {",".join(["_" + str(x) for x in sizes_list])}


previous_icons = {{}}


def get_icon(name, size):
	global previous_icons

	try:
""")

	for size in sizes_list:
		init_file.write(f"""
		{"if" if size == sizes_list[0] else "elif"} size == {size}:
			if f"{{name}}_{{size}}" in previous_icons:
				return previous_icons[f"{{name}}_{{size}}"]
			else:
				with path(GuiV2.icons._{size}, f"{{name}}.png") as icon:
					icon_path = str(icon)
	""")
	
	init_file.write("""
		else:
			raise FileNotFoundError
		
		icon = wx.Bitmap(icon_path)
		previous_icons[f"{name}_{size}"] = icon
		return icon
	except FileNotFoundError:
		try:
			return wx.ArtProvider.GetBitmap(name, wx.ART_TOOLBAR, wx.Size(size, size))
		except:
			raise ValueError(f"Icon with name '{name}' not found")

	""")

print("====================\n\nFinished!")